//Pin connected to ST_CP of 74HC595
int latchPin = 8;
//Pin connected to SH_CP of 74HC595
int clockPin = 12;
////Pin connected to DS of 74HC595
int dataPin = 11;
// the wait time
int wait = 500;

void setup() {
  //set pins to output so you can control the shift register
  pinMode(latchPin, OUTPUT);
  pinMode(clockPin, OUTPUT);
  pinMode(dataPin, OUTPUT);
}


public class Main.Java{ 
	public static void main(String[] args) 
	{ 
		int num1 = 5; 
		String numstring; 
		
		 Serial.begin(9600);
    // take the latchPin low so 
    // the LEDs don't change while you're sending in bits:
    digitalWrite(latchPin, LOW);
    // shift out the bits:
    shiftOut(dataPin, clockPin, MSBFIRST, 128);  

		// switch statement with int data type 
		switch (num1) { 
		
		
		case 1: 
			
			
    digitalWrite(latchPin, LOW);
    // shift out the bits:
    shiftOut(dataPin, clockPin, MSBFIRST, 128);  
    Serial.println('0');
    //take the latch pin high so the LEDs will light up:
    digitalWrite(latchPin, HIGH);
    // pause before next value:
    delay(wait);

			
			
			break; 
		case 2: 
			
			
			digitalWrite(latchPin, LOW);
    // shift out the bits:
    shiftOut(dataPin, clockPin, MSBFIRST, 188);  
    Serial.println('1');
    //take the latch pin high so the LEDs will light up:
    digitalWrite(latchPin, HIGH);
    // pause before next value:
    delay(wait);
			
			break; 
		case 3: 
			
			
		digitalWrite(latchPin, LOW);
    // shift out the bits:
    shiftOut(dataPin, clockPin, MSBFIRST, 9);  
    Serial.println('2');
    //take the latch pin high so the LEDs will light up:
    digitalWrite(latchPin, HIGH);
    // pause before next value:
    delay(wait);
			
			break; 
		case 4: 
			
			
   digitalWrite(latchPin, LOW);
    // shift out the bits:
    shiftOut(dataPin, clockPin, MSBFIRST, 24);  
    Serial.println('3');
    //take the latch pin high so the LEDs will light up:
    digitalWrite(latchPin, HIGH);
    // pause before next value:
    delay(wait);
			
			break; 
		case 5: 
			
			
			 digitalWrite(latchPin, LOW);
    // shift out the bits:
    shiftOut(dataPin, clockPin, MSBFIRST, 52);  
    Serial.println('4');
    //take the latch pin high so the LEDs will light up:
    digitalWrite(latchPin, HIGH);
    // pause before next value:
    delay(wait);

			
			
			break; 
		case 6: 
			
			
digitalWrite(latchPin, LOW);
    // shift out the bits:
    shiftOut(dataPin, clockPin, MSBFIRST, 18);  
    Serial.println('5');
    //take the latch pin high so the LEDs will light up:
    digitalWrite(latchPin, HIGH);
    // pause before next value:
    delay(wait);
			
			break; 
		case 7: 
			
			
		digitalWrite(latchPin, LOW);
    // shift out the bits:
    shiftOut(dataPin, clockPin, MSBFIRST, 2);  
    Serial.println('6');
    //take the latch pin high so the LEDs will light up:
    digitalWrite(latchPin, HIGH);
    // pause before next value:
    delay(wait);
			
			break; 
			
					case 8: 
					    
					    
			    digitalWrite(latchPin, LOW);
    // shift out the bits:
    shiftOut(dataPin, clockPin, MSBFIRST, 184);  
    Serial.println('7');
    //take the latch pin high so the LEDs will light up:
    digitalWrite(latchPin, HIGH);
    // pause before next value:
    delay(wait);		    
					    
					    
					    
					    
					    
					    
					    
					    
			break;
			
			
					case 9: 
					    
					    
					    
			   digitalWrite(latchPin, LOW);
    // shift out the bits:
    shiftOut(dataPin, clockPin, MSBFIRST, 0);  
    Serial.println('8');
    //take the latch pin high so the LEDs will light up:
    digitalWrite(latchPin, HIGH);
    // pause before next value:
    delay(wait);		    
					    
					    
					    
					    
					    
					    
					    
			break;		    
			
			
					case 10: 
					    
					    
					    digitalWrite(latchPin, LOW);
    // shift out the bits:
    shiftOut(dataPin, clockPin, MSBFIRST, 48);  
    Serial.println('9');
    //take the latch pin high so the LEDs will light up:
    digitalWrite(latchPin, HIGH);
    // pause before next value:
    delay(wait);
      
					    
					    
					    
					    
					    
					    
					    
					    
			break;
			
			
		default: 
			
			
			numstring = "Invalid day"; 
			
			break; 
		} 
	
	
		System.out.println(numstring); 
	} 
} 
